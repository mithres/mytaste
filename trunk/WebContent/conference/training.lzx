<canvas debug="true">
	
	<script src="../js/json.js"/>
	
	<include href="../lps/videoconference/base/vcrtmpconnection.lzx"/>
	<include href="../lps/videoconference/base/userList.lzx"/>
	<include href="../lps/videoconference/base/sharedObject.lzx"/>
	
	<attribute name="sid" value="" type="string"/>
	<attribute name="roomId" value="" type="string"/>	
	
	<sharedObject id="soUserList">
		<handler name="onStatus" args="evt">
			Debug.write("==="+evt[0].code);
			if (evt[0].code == "success") {
				var userList = this.getData("userList");
				Debug.write(userList);
			}else if(evt[0].code == "clear"){
				rc.getUserInfo.callRPC();
			}
		</handler>
		<method name="joinUserList" args="userInfo">
		<![CDATA[
			var userList = null;
			if (this.getData("userList") != null) {
				userList = getData("userList");
			} else {
				userList = new Array();
			}
			userList.push(userInfo);
			this.setData("userList", userList);
		]]>
		</method>
	</sharedObject>
	
	
	<sharedObject id="soMessage">
		<handler name="onStatus" args="evt">
		<![CDATA[
			Debug.write(evt[0].code);
			if (evt[0].code == "success") {
				rmessage.setAttribute("text", rmessage.text + "<br/>"
								+ this.getData("message"));
			}
		]]>
		</handler>
	</sharedObject>	

	<vcrtmpconnection id="rc" autoconnect="false">

		<handler name="onconnect">
			Debug.write("connected");
			var messageSO = "MessageSO"+canvas.roomId;
			var userListSO = "UserListSO"+canvas.roomId;
			soMessage.connect(messageSO, this._nc, false);
			soUserList.connect(userListSO, this._nc, false);
		</handler>

		<handler name="onerror">
			Debug.write("error ", this.status);
		</handler>

		<!--handler name="onmessage">
			<![CDATA[
				Debug.write("Receive message:" + this.soMessage);
				var receivedMessage = rmessage.text;
				rmessage.setAttribute("text", receivedMessage + "<br/>"	+ this.soMessage);
			]]>
			</handler>

			<handler name="onuserlistupdate">
			<![CDATA[	
				Debug.write("Update list:"+this.userinfo);
				ul.addUserToList(JSON.parse(this.userinfo));
			]]>
			</handler>


			<method name="sendMessage" args="mess">
			<![CDATA[
				if (this.useSO && mess != "") {
					Debug.write("Send message");
					this._sharedObject.send("messageHandler", mess);
				}
			]]>
			</method-->
		
		<!--method name="addUserToList" args="jsonStr">
			<![CDATA[
				//if (this.useSO) {
				//this._onSync(
				//var userList = null;
				//if (this.getData("userList") != null) {
				//	userList = getData("userList");
				//} else {
				//	userList = new Array();
				//}
				//userList.push(jsonStr);
				//setData("userList", userList);
				//ul.addUserToList(JSON.parse(userList[0]));
				//this._sharedObject.send("userListHandler",jsonStr);
				//	}
			]]>
			</method-->
		
		<netremotecall name="getUserInfo" funcname="conference.loadUserInfo">
			<attribute name="param1" value="${canvas.sid}" type="string" />      
			<netparam name="vars1">
				<method name="getValue">
					return parent.param1;
				</method>
			</netparam>  
			<method name="onResult" args="value">
				soUserList.joinUserList(value);
			</method>  
		</netremotecall>
		
	</vcrtmpconnection>
		
	<mediastream name="s1" type="rtmp"/>
	<mediastream name="s2" type="rtmp"/>
	
	
	
	<script>
		canvas.setDefaultContextMenu(new LzContextMenu());
		function init(roomId, sid, url) {
			Debug.write(url + ":" + roomId + ":" + sid);
			canvas.setAttribute("sid", sid);
			canvas.setAttribute("roomId", roomId);
			rc.setAttribute("src", url);
			rc.connect(sid);
			if (cam.show == false) {
				live.stream.setAttribute('url', roomId);
			}
		}
	</script>
	
	<!-- This is toolbar view-->
	<view x="0" y="0" width="100%" height="40" bgcolor="0xA3B2CC">
		<view x="1" y="1" width="${parent.width - 2}" height="${parent.height - 2}" bgcolor="white">
			
		</view>
	</view>
	
	<!-- user list view -->
	<userlist id="ul" width="200" height="600" x="0" y="40"/>	
	
	<!-- Chat view -->
	<view width="100%" height="300" y="617" bgcolor="0xA3B2CC">
		<view name="chatContent" bgcolor="0xd2d2d2" width="${parent.width - 2}" height="123" clip="true" x="1" y="1">
			<text id="rmessage" multiline="true" width="100%"/>
			<vscrollbar/>
		</view>
		<view height="100%" width="${parent.width - 2}" x="1" y="124">
			<simplelayout axis="x"/>
			<edittext bgcolor="white" width="${parent.width - 50}" id="smessage"/>
			<button width="50" onclick="soMessage.setData('message',smessage.text);">Send</button>
		</view>
	</view>
		
	
	<!-- Display video stream window -->
	<window id="videoWindow" width="600" height="450" x="0" y="0" resizable="false" closeable="false" title="Moderator Video">
		
		<attribute name="maximized" value="true"/>

		<state name="big" applied="${videoWindow.maximized}">
			<animatorgroup duration="1000" process="simultaneous">
				<animator attribute="width" to="600"/>
				<animator attribute="height" to="450"/>
			</animatorgroup>
		</state>

		<state name="small" applied="${! videoWindow.maximized}">
			<animatorgroup duration="1000" process="simultaneous">
				<animator attribute="width" to="200"/>
				<animator attribute="height" to="150"/>
			</animatorgroup>
		</state>
     	
		<simplelayout axis="y"/>
     	
		<button text="Toggle" placement="title_area" align="right" height="16">
			<handler name="onclick">
				videoWindow.setAttribute('maximized', (!videoWindow.maximized));
			</handler>
		</button>
		
     
		<button text="${cam.show ? 'Stop Publish' : 'Publish'}" 
			onclick="pubStream();">
			<method name="pubStream">
			<![CDATA[
				if (cam.show) {
					Debug.write("pub stream stop");
					live.stream.stop();
					cam.setAttribute('show', false);
				} else {
					Debug.write("pub stream start");
					live.stream.broadcast();
					cam.setAttribute('show', true);
				}
			]]>
			</method>
		</button>
		<view id="videoView" width="100%" height="100%">
			<videoview id="live" type="rtmp" stream="$once{canvas.s1}" width="$once{parent.width}" height="$once{parent.height-40}" y="40">
				<camera id="cam" show="false" fps="25" width="$once{parent.width}" height="$once{parent.height}" picturequality="0.8"/>
				<microphone id="mic" capturing="true"/>
			</videoview>
		</view>
	</window>
		
	<!--videoview name="vid" type="rtmp" stream="$once{canvas.s2}" width="320" height="240"/>
		<edittext name="username"></edittext>
		<button text="${s2.playing ? 'stop receiving' : 'receive'}"
			onclick="s2.setAttribute('url', parent.username.text);
			if (s2.playing) s2.stop(); else s2.play();"/-->
                  	
			
</canvas>