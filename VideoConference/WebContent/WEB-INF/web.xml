<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">

	<display-name>VideoConference</display-name>

	<context-param>
		<param-name>globalScope</param-name>
		<param-value>default</param-value>
	</context-param>
	<context-param>
		<param-name>parentContextKey</param-name>
		<param-value>default.context</param-value>
	</context-param>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>/videoconference</param-value>
	</context-param>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>WEB-INF/red5*.xml</param-value>
	</context-param>
	
	<!-- JPA Open Session In View filter-->
	<filter>
		<filter-name>lazyLoadingFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>lazyLoadingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
		
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>com.vc.presentatioin.filter.EncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	
	<!-- struts2 filter -->
	<filter>
		<filter-name>struts-cleanup</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>
	
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.module.sitemesh.filter.PageFilter
		</filter-class>
	</filter>

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>struts-cleanup</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<listener>
		<listener-class>org.red5.server.war.WarLoaderServlet</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.vc.presentatioin.listener.ServletContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.vc.presentatioin.listener.VCSessionListener</listener-class>
	</listener>
    	
	<servlet>
		<servlet-name>LPS</servlet-name>
		<servlet-class>org.openlaszlo.servlets.LZServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>LZViewer</servlet-name>
		<servlet-class>org.openlaszlo.servlets.LZViewer</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>LPS</servlet-name>
		<url-pattern>*.lzx</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>LPS</servlet-name>
		<url-pattern>*.lzo</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>LZViewer</servlet-name>
		<url-pattern>/LZViewer</url-pattern>
	</servlet-mapping>
	
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>
		
	<security-constraint> 
		<web-resource-collection> 
			<web-resource-name>Forbidden</web-resource-name> 
			<url-pattern>/WEB-INF/*</url-pattern> 
		</web-resource-collection> 
		<auth-constraint /> 
	</security-constraint> 
	<security-constraint> 
		<web-resource-collection> 
			<web-resource-name>Forbidden</web-resource-name> 
			<url-pattern>/persistence/*</url-pattern> 
		</web-resource-collection> 
		<auth-constraint /> 
	</security-constraint> 
	<security-constraint> 
		<web-resource-collection> 
			<web-resource-name>Forbidden</web-resource-name> 
			<url-pattern>/streams/*</url-pattern> 
		</web-resource-collection> 
		<auth-constraint /> 
	</security-constraint>
	
	<!-- Protect source code 
	<security-constraint> 
		<web-resource-collection> 
			<web-resource-name>Forbidden</web-resource-name> 
			<url-pattern>*.lzx</url-pattern> 
		</web-resource-collection> 
		<auth-constraint /> 
	</security-constraint>
	-->
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
</web-app>