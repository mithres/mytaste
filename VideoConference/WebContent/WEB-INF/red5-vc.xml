<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
	default-autowire="byName">
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost/videoconference"/>
		<property name="username" value="root" />
		<property name="password" value="passed" />
		<property name="maxIdle" value="10"/>
		<property name="maxActive" value="100"/>
		<property name="maxWait" value="10000"/>
		<property name="validationQuery" value="select 1"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testWhileIdle" value="true"/>
		<property name="timeBetweenEvictionRunsMillis" value="1200000"/>
		<property name="minEvictableIdleTimeMillis" value="1800000"/>
		<property name="numTestsPerEvictionRun" value="5"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	
	<!-- JPA config,load pu from persistence.xml -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="VideoConference" />
		<property name="dataSource" ref="dataSource" />
		<property name="loadTimeWeaver">
			<bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
	</bean>
	<!-- Transaction Config -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Use annotation to define transaction -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />
	
	<aop:aspectj-autoproxy />

	<context:annotation-config />
	<context:component-scan	base-package="com.vc.dao,com.vc.service"/>
	
	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/red5-web.properties" />
	</bean>
	
	<bean id="authedClientRegistry" class="com.vc.core.client.AuthedClientRegister"/>
	
	<bean id="web.context.vod" class="org.red5.server.Context">
		<property name="scopeResolver" ref="red5.scopeResolver" />
		<property name="clientRegistry" ref="authedClientRegistry" />
		<property name="serviceInvoker" ref="global.serviceInvoker" />
		<property name="mappingStrategy" ref="global.mappingStrategy" />
	</bean>

	<bean id="web.scope.vod" class="org.red5.server.WebScope" init-method="register">
		<property name="server" ref="red5.server" />
		<property name="parent" ref="global.scope" />
		<property name="context" ref="web.context.vod" />
		<property name="handler" ref="web.handler.vod" />
		<property name="contextPath" value="${webapp.vod.contextPath}" />
		<property name="virtualHosts" value="${webapp.virtualHosts}" />
	</bean>
	
	<bean id="web.handler.vod" class="com.vc.core.adapter.VODApplicationAdapter"/>
	
	<!-- video conference context -->
	
	<bean id="web.context.conference" class="org.red5.server.Context">
		<property name="scopeResolver" ref="red5.scopeResolver" />
		<property name="clientRegistry" ref="authedClientRegistry" />
		<property name="serviceInvoker" ref="global.serviceInvoker" />
		<property name="mappingStrategy" ref="global.mappingStrategy" />
	</bean>

	<bean id="web.scope.conference" class="org.red5.server.WebScope" init-method="register">
		<property name="server" ref="red5.server" />
		<property name="parent" ref="global.scope" />
		<property name="context" ref="web.context.conference" />
		<property name="handler" ref="web.handler.conference" />
		<property name="contextPath" value="${webapp.conference.contextPath}" />
		<property name="virtualHosts" value="${webapp.virtualHosts}" />
	</bean>
	
	<bean id="web.handler.conference" class="com.vc.core.adapter.VideoConferenceApplicationAdapter"/>
	
	<!-- This bean use to change vod and record video path, support absolutePath-->
	<bean id="streamFilenameGenerator" class="com.vc.core.vod.CustomFilenameGenerator">
		<property name="recordPath" value="/home/ammen/Test/recordedStreams/" />
		<property name="playbackPath" value="/home/ammen/Test/videoStreams/" />
	</bean>	
	
	<!-- end-->
	
	<bean id="ApplicationContextUtil" class="com.vc.core.spring.ApplicationContextUtil" lazy-init="false"/>	
	
	<import resource="services/applicationContext-vod.xml"/>
	
</beans>