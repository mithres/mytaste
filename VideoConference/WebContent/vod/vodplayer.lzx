<canvas debug="true">
	
	<include href="../lps/videoconference/conf/lpsconfig.lzx"/>
	
	<include href="../lps/videoconference/security/aescryptlz.lzx" />
	<include href="../lps/videoconference/base/vcrtmpconnection.lzx"/>
	
	<attribute name="filmName" value="null"/>
	
	<script>
		canvas.setDefaultContextMenu(new LzContextMenu());
		
		function init(filmName) {
			Debug.write("Film name :" + filmName);
			canvas.setAttribute("filmName", filmName);
			canvas.rc.getSignature.callRPC();
		}
	</script>
	
	<handler name="oninit">
		var url = "rtmp://"+ canvas.serverIP + "/" + canvas.rtmpAddress;
		Debug.write(url);
		rc.setAttribute("src",url);
		rc.connect();
	</handler>
	
	<vcrtmpconnection name="rc" autoconnect="false">
		
		<handler name="onconnect">
			Debug.write("connected");
		</handler>
		
		<handler name="onerror">
			Debug.write("error ", this.status);
		</handler>
		
		<netremotecall name="getSignature" funcname="vod.getSignature">
			<!--attribute name="param1" value="ammen" type="string" />      
				<netparam name="vars1">
					<method name="getValue">
						return parent.param1;
					</method>
				</netparam-->  
			<method name="onResult" args="value">
				Debug.write("getSignature return:" + value);
				aes = new lz.AESCryptLz();
				var encryptedName = aes.encryptByAscii(canvas.filmName, value);
				canvas.loadPlayer(encryptedName);
			</method>  
			
		</netremotecall>
    	
	</vcrtmpconnection>
	
	<method name="loadPlayer" args="params">
		Debug.write("Load player start:" + params);
		player.setAttribute("url", params);
		Debug.write("Load player end:" + player.url);
	</method>
	

	<videoplayer id="player" type="rtmp" autoplay="true" width="320" height="240"/>
	
</canvas>